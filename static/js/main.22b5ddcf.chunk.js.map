{"version":3,"sources":["Components/ConventionalOven/OvenQuickPick.js","Components/ConventionalOven/Oven_Temp/OvenTemp.js","Components/ConventionalOven/Oven_Time/OvenTime.js","Components/AirFryer/AirFTempTime.js","App.js","index.js"],"names":["OvenQuickPick","props","tempOrTime","className","Typography","variant","Button","size","onClick","ovenTempButton","color","ovenTimeButton","value","OvenTemp","Slider","id","onChange","event","newValue","tempChange","ovenTemp","valueLabelDisplay","step","min","max","gutterBottom","preventDefault","parseInt","target","innerText","OvenTime","maxLength","autoFocus","placeholder","timeChange1","type","ovenTime","timeChange","AirFTempTime","airFTemp","airFTime","App","useState","setOvenTemp","setOvenTime","setAirFTemp","setAirFTime","airFTempChangeHandler","data","Math","round","airFTimeChangeHandler","align","totalTime","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22b5ddcf.chunk.js","sourcesContent":["import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst OvenQuickPick = (props) => {\r\n    return (\r\n        // Very Important Empty Parent Element else Ternary Operator Won't Work\r\n        <>\r\n            {\r\n                // Checks If The Passed In Prop is Temp For Temperature Buttons Else -> Render Time Buttons\r\n                props.tempOrTime === 'temp' ?\r\n                    (<div className='ovenTempQPick-container'>\r\n                        <Typography className=\"buttonsQuick\" variant='h6'> Quick Pick</Typography>\r\n                        <Button size='medium' onClick={props.ovenTempButton} variant=\"contained\" color='primary'>300 °F</Button>\r\n                        <Button size='medium' onClick={props.ovenTempButton} variant=\"contained\" color='primary'>350 °F</Button>\r\n                        <Button size='medium' onClick={props.ovenTempButton} variant=\"contained\" color='primary'>400 °F</Button>\r\n                    </div>)\r\n                    :\r\n                    (<div className='ovenTimeQPick-container'>\r\n                        <Typography className=\"buttonsQuick\" variant='h6'>Quick Add</Typography>\r\n                        <Button size='medium' onClick={props.ovenTimeButton} variant=\"contained\" color='primary'>+1</Button>\r\n                        <Button size='medium' onClick={props.ovenTimeButton} variant=\"contained\" color='primary' value='5'>+5</Button>\r\n                        <Button size='medium' onClick={props.ovenTimeButton} variant=\"contained\" color='primary' value='20'>+20</Button>\r\n                    </div>)\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OvenQuickPick\r\n\r\n","import Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nimport OvenQuickPick from '../OvenQuickPick';\r\nimport './Oven_Temp.css';\r\n\r\nconst OvenTemp = (props) => {\r\n\r\n    // Oven Temp Slider Handler, Passes Data to Parent Component to Change State\r\n    const ovenTempSliderChangeHandler = (event, newValue) => {\r\n        props.tempChange((newValue));\r\n    }\r\n\r\n    // Oven Temp Button Handler, Passes Data to Parent Component to Change State\r\n    const ovenTempButtonChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        props.tempChange(parseInt(event.target.innerText));\r\n    }\r\n\r\n    return (\r\n        <div className='ovenTempSection'>\r\n            <div className='ovenTemp-container'>\r\n                {/* Slider Component from Material-UI */}\r\n                <Slider\r\n                    id='ovenTemp-Slider'\r\n                    onChange={ovenTempSliderChangeHandler}\r\n                    value={props.ovenTemp}\r\n                    valueLabelDisplay=\"auto\"\r\n                    step={25}\r\n                    min={200}\r\n                    max={550}\r\n                />\r\n                <Typography variant='h5' id='testing' gutterBottom>Oven Temp: {props.ovenTemp + '° F'} </Typography>\r\n            </div>\r\n            {/* 3 Buttons for Quick Access, Takes Passes In Handler for onClick/onChange Event */}\r\n            <OvenQuickPick tempOrTime={'temp'} ovenTempButton={ovenTempButtonChangeHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OvenTemp\r\n","import Typography from '@material-ui/core/Typography';\r\n\r\nimport OvenQuickPick from '../OvenQuickPick';\r\n\r\nimport './Oven_Time.css';\r\n\r\nconst OvenTime = (props) => {\r\n\r\n    // Oven Time Input Handler, Passes Data to Parent Component to Change State\r\n    const ovenTimeChangeHandler = (event) => {\r\n        props.timeChange1(parseInt(event.target.value));\r\n    }\r\n\r\n    // Oven Time Button Handler, Passes Data to Parent Component to Change State\r\n    const ovenTimeButtonChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        props.timeChange(parseInt(event.target.innerText));\r\n    }\r\n\r\n    return (\r\n        <div className='ovenTimeSection'>\r\n            <div className='ovenTime-container'>\r\n                <Typography variant='h5'> Oven Time: </Typography>\r\n                <input id='ovenTimeNumber' min=\"0\" max='999' maxLength='3' autoFocus placeholder='0' onChange={ovenTimeChangeHandler} type='number' value={props.ovenTime} ></input>\r\n                <Typography variant='h5'>Mins</Typography>\r\n            </div>\r\n            {/* Waits for an Event to Occur, Then Activates The Parent Method to Process The Event Data -> Passed Further Up to App.js to Store State */}\r\n            <OvenQuickPick ovenTimeButton={ovenTimeButtonChangeHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OvenTime\r\n","import Typography from '@material-ui/core/Typography'\r\n\r\nconst AirFTempTime = (props) => {\r\n    return (\r\n        <div >\r\n            {/* Simple Text for Displaying Temp & Time For Air Fryer */}\r\n            <Typography variant='h4' gutterBottom >Temp: {props.airFTemp + \"° F\"}</Typography>\r\n            <Typography variant='h4' gutterBottom >Time: {props.airFTime + \" Mins\"}</Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AirFTempTime\r\n","import { useState } from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nimport OvenTemp from \"./Components/ConventionalOven/Oven_Temp/OvenTemp\";\r\nimport OvenTime from \"./Components/ConventionalOven/Oven_Time/OvenTime\";\r\nimport AirFTempTime from './Components/AirFryer/AirFTempTime';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n\r\n  // Set the State for Oven Temp & Time + Air Fryer Temp & Time w/ Initial Values\r\n  const [ovenTemp, setOvenTemp] = useState(350);\r\n  const [ovenTime, setOvenTime] = useState(0);\r\n  const [airFTemp, setAirFTemp] = useState(315);\r\n  const [airFTime, setAirFTime] = useState(0);\r\n\r\n  // Oven Temp Handler, Set New State Value\r\n\r\n  const ovenTempChangeHandler = (data) => {\r\n    setOvenTemp(data);\r\n    airFTempChangeHandler(data);\r\n  }\r\n\r\n  // Two Handlers for Adjusting Correct Oven Temp. One For Button (Incremental) vs Input Box (Absolute Value)\r\n  const ovenTimeChangeHandler = (data) => {\r\n    const totalTime = data + ovenTime;\r\n    setOvenTime(totalTime);\r\n    airFTimeChangeHandler(totalTime);\r\n  }\r\n\r\n  const ovenTimeAbsoluteChangeHandler = (data) => {\r\n    setOvenTime(data);\r\n    airFTimeChangeHandler(data);\r\n  }\r\n\r\n  // Air Fryer Temp & Time Handler. Sets New Value\r\n\r\n  const airFTempChangeHandler = (data) => {\r\n    setAirFTemp(Math.round(data * .90));\r\n  }\r\n\r\n  const airFTimeChangeHandler = (data) => {\r\n    setAirFTime(Math.round(data * .80));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Top/Heading Section. Includes Title & Subheading */}\r\n      <div className='headingSection-container'>\r\n        <Typography id='title' variant='h2' gutterBottom align='center'>Air Fryer Calculator</Typography>\r\n        <Typography id='titleSub' variant='h6' align='center'>Easily Convert Oven Bake Instructions To Air Fryer.</Typography>\r\n      </div>\r\n\r\n      {/* Main Content Includes Oven Box And Air Fryer Box */}\r\n      <div className='mainSection-container'>\r\n        {/* Oven Box Title + Involves Oven Temperature (Top) & Oven Time (Bottom) */}\r\n        <div className='ovenSection-container'>\r\n          <Typography align='center' id='ovenSubTitle' variant='h3' gutterBottom >Conventional</Typography>\r\n          <OvenTemp ovenTemp={ovenTemp} tempChange={ovenTempChangeHandler} />\r\n          <OvenTime ovenTime={ovenTime} timeChange={ovenTimeChangeHandler} timeChange1={ovenTimeAbsoluteChangeHandler} />\r\n        </div>\r\n        {/* Air Fryer Section Involves Title + Temp & Time */}\r\n        <div className='airFSection-container'>\r\n          <Typography align='center' id='airFryerSubTitle' variant='h3' gutterBottom >Air Fryer</Typography>\r\n          <AirFTempTime airFTemp={airFTemp} airFTime={airFTime} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}